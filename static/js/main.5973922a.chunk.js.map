{"version":3,"sources":["actions/actionCreators.js","components/FieldSelect.js","components/ResultCount.js","components/ResultsTable.js","reducers/fetchSelectFields.js","reducers/selectedField.js","reducers/fetchFieldData.js","reducers/index.js","store.js","components/Main.js","components/App.js","index.js"],"names":["selectedField","type","requestFields","receiveFields","fields","error","fetchFields","dispatch","fetch","then","response","json","catch","receiveFieldData","items","resultCount","fetchFieldData","field","concat","sortedData","sort","a","b","count","data","resultLength","fullResults","trimmedResults","i","push","trimResults","length","SelectWrapper","styled","div","_templateObject","FieldSelect","react_default","createElement","value","this","props","onChange","handleChange","map","index","key","Component","StyledResult","p","ResultCount_templateObject","ResultCount","displayResultCount","ResultContainer","ResultsTable_templateObject","StyledResultTable","table","_templateObject2","ResultsTable","components_ResultCount","item","average_age","fetchSelectFields","state","arguments","undefined","isFetching","action","Object","assign","rootReducer","combineReducers","loggerMiddleware","createLogger","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","GlobalStyle","createGlobalStyle","Main_templateObject","PageTitle","h1","Main_templateObject2","Main","event","target","message","components_FieldSelect","components_ResultsTable","App","connect","bindActionCreators","ReactDOM","render","es","HashRouter","basename","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.5973922a.chunk.js","sourcesContent":["import fetch from \"cross-fetch\";\n\n//select a field\nexport function selectedField(selectedField) {\n  return {\n    type: \"SET_SELECTED_FIELD\",\n    selectedField\n  };\n}\n//request fields\nexport function requestFields() {\n  return {\n    type: \"REQUEST_FIELDS\"\n  };\n}\n//receive fields\nexport function receiveFields(fields, error) {\n  return {\n    type: \"RECEIVE_FIELDS\",\n    fields,\n    error\n  };\n}\n//fetch fields\nexport function fetchFields() {\n  return function(dispatch) {\n    dispatch(requestFields());\n    return fetch(`https://birdie-test-thibault-henry.herokuapp.com/api/fields`)\n      .then(\n        response => {\n          return response.json();\n        },\n        error => {\n          return error;\n        }\n      )\n      .then(json => dispatch(receiveFields(json)))\n      .catch(error => dispatch(receiveFields([], error)));\n  };\n}\n//request field data\nexport function requestFieldData() {\n  return {\n    type: \"REQUEST_FIELD_DATA\"\n  };\n}\n//receive field data\nexport function receiveFieldData(items, resultCount, error) {\n  return {\n    type: \"RECEIVE_FIELD_DATA\",\n    items,\n    resultCount,\n    error\n  };\n}\n//fetch field data\nexport function fetchFieldData(field) {\n  return function(dispatch) {\n    dispatch(requestFieldData());\n    return fetch(\n      `https://birdie-test-thibault-henry.herokuapp.com/api/${field}`\n    )\n      .then(\n        response => {\n          return response.json();\n        },\n        error => {\n          return error;\n        }\n      )\n      .then(json => {\n        let sortedData = sortByCount(json);\n        dispatch(\n          receiveFieldData(trimResults(sortedData, json.length), json.length)\n        );\n      })\n      .catch(error => dispatch(receiveFieldData({}, 0, error)));\n  };\n}\n\nfunction sortByCount(data) {\n  const unsortedData = data;\n  return unsortedData.sort((a, b) => {\n    return b.count - a.count;\n  });\n}\n\nfunction trimResults(data, resultLength) {\n  const fullResults = data;\n  if (resultLength > 100) {\n    let trimmedResults = [];\n\n    for (let i = 0; i <= 99; i++) {\n      trimmedResults.push(fullResults[i]);\n    }\n    return trimmedResults;\n  }\n  return fullResults;\n}\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nconst SelectWrapper = styled.div`\n  position: relative;\n  border: 1px solid #ccc;\n  border-radius: 0px;\n  overflow: hidden;\n  width: 90%;\n  margin: 0 auto;\n  padding 5px 6px;\n\n  @media (min-width: 48em) {\n    width: 50%;\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    right: 10px;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 0;\n    height: 0;\n    border-left: 10px solid transparent;\n    border-right: 10px solid transparent;\n    border-top: 10px solid #666;\n  }\n\n  select {\n    width: 130%;\n    border: none;\n    background: transparent;\n    font-size: 24px;\n    font-family: \"Courier New\", Courier, monospace;\n  \n    &:focus {\n      outline: none;\n    }\n  }\n`;\n\nclass FieldSelect extends Component {\n  render() {\n    return (\n      <SelectWrapper>\n        <select\n          value={this.props.selectedField.value}\n          onChange={this.props.handleChange}\n        >\n          <option value=\"\">select a field</option>\n          {this.props.fields.map((field, index) => (\n            <option key={index}>{field}</option>\n          ))}\n        </select>\n      </SelectWrapper>\n    );\n  }\n}\n\nexport default FieldSelect;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledResult = styled.p`\n  font-size: 18px;\n`;\n\nclass ResultCount extends Component {\n  displayResultCount(resultCount) {\n    if (resultCount > 100) {\n      return `Showing 100 of ${resultCount} results`;\n    } else {\n      return `Showing all ${resultCount} results`;\n    }\n  }\n\n  render() {\n    return (\n      <StyledResult>\n        {this.displayResultCount(this.props.resultCount)}\n      </StyledResult>\n    );\n  }\n}\n\nexport default ResultCount;\n","import React, { Component } from \"react\";\nimport ResultCount from \"./ResultCount\";\nimport styled from \"styled-components\";\n\nconst ResultContainer = styled.div`\n  text-align: center;\n`;\n\nconst StyledResultTable = styled.table`\n  width: 100%;\n  text-align: left;\n  border-collapse: collapse;\n  border-spacing: 0;\n  border-top: 1px solid #ccc;\n\n  thead {\n    td {\n      font-size: 18px;\n      padding: 20px;\n    }\n  }\n\n  tbody {\n    tr:nth-child(2n + 1) {\n      td {\n        background-color: #e6f7ed;\n      }\n    }\n  }\n\n  td {\n    padding: 10px 20px;\n  }\n`;\n\nclass ResultsTable extends Component {\n  render() {\n    return (\n      <ResultContainer>\n        <ResultCount resultCount={this.props.resultCount} />\n        <StyledResultTable>\n          <thead>\n            <tr>\n              <td>#</td>\n              <td>Count</td>\n              <td>Field</td>\n              <td>Average Age</td>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.items.map((item, index) => (\n              <tr key={index}>\n                <td>{index + 1}</td>\n                <td>{item.field}</td>\n                <td>{item.count}</td>\n                <td>{item.average_age}</td>\n              </tr>\n            ))}\n          </tbody>\n        </StyledResultTable>\n      </ResultContainer>\n    );\n  }\n}\n\nexport default ResultsTable;\n","function fetchSelectFields(\n  state = {\n    isFetching: false,\n    fields: [],\n    error: {}\n  },\n  action\n) {\n  switch (action.type) {\n    case \"REQUEST_FIELDS\":\n      return Object.assign({}, state, {\n        isFetching: true\n      });\n    case \"RECEIVE_FIELDS\":\n      return Object.assign({}, state, {\n        isFetching: false,\n        fields: action.fields,\n        error: action.error\n      });\n    default:\n      return state;\n  }\n}\n\nexport default fetchSelectFields;\n","function selectedField(state = { value: \"\" }, action) {\n  switch (action.type) {\n    case \"SET_SELECTED_FIELD\":\n      return Object.assign({}, state, {\n        value: action.selectedField\n      });\n    default:\n      return state;\n  }\n}\n\nexport default selectedField;\n","function fetchFieldData(\n  state = {\n    isFetching: false,\n    items: [],\n    resultCount: 0,\n    error: {}\n  },\n  action\n) {\n  switch (action.type) {\n    case \"REQUEST_FIELD_DATA\":\n      return Object.assign({}, state, {\n        isFetching: true\n      });\n    case \"RECEIVE_FIELD_DATA\":\n      return Object.assign({}, state, {\n        isFetching: false,\n        items: action.items,\n        resultCount: action.resultCount,\n        error: action.error\n      });\n    default:\n      return state;\n  }\n}\n\nexport default fetchFieldData;\n","import { combineReducers } from \"redux\";\nimport fetchSelectFields from \"./fetchSelectFields\";\nimport selectedField from \"./selectedField\";\nimport fetchFieldData from \"./fetchFieldData\";\n\nconst rootReducer = combineReducers({\n  fetchSelectFields,\n  selectedField,\n  fetchFieldData\n});\n\nexport default rootReducer;\n","import thunkMiddleware from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./reducers/index\";\n\nconst loggerMiddleware = createLogger();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunkMiddleware, loggerMiddleware))\n);\n\nexport default store;\n","import React, { Component } from \"react\";\nimport FieldSelect from \"./FieldSelect\";\nimport ResultsTable from \"./ResultsTable\";\nimport store from \"../store\";\nimport {\n  fetchFields,\n  selectedField,\n  fetchFieldData\n} from \"../actions/actionCreators\";\nimport styled, { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    font-family: \"Courier New\", Courier, monospace;\n    color: #1f1f1f;\n    margin: 0 15px 30px;\n\n    @media(min-width: 48em) {\n      margin: 0 30px 60px;\n    }\n  }\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 38px;\n  text-align: center;\n  font-family: Georgia, \"Times New Roman\", Times, serif;\n  letter-spacing: -2px;\n  color: #ff7219;\n\n  @media (min-width: 48em) {\n    font-size: 50px;\n  }\n`;\n\nclass Main extends Component {\n  handleChange(event) {\n    store.dispatch(selectedField(event.target.value));\n    store.dispatch(fetchFieldData(event.target.value));\n  }\n\n  componentDidMount() {\n    store.dispatch(fetchFields());\n  }\n\n  render() {\n    const error = this.props.error;\n    const isFetching = this.props.isFetching;\n\n    if (isFetching) {\n      return <div>Loading...</div>;\n    } else if (error) {\n      return <div>Error: {error.message}</div>;\n    } else {\n      return (\n        <div>\n          <GlobalStyle />\n          <PageTitle>Demographic Data</PageTitle>\n          <FieldSelect\n            fields={this.props.fields}\n            selectedField={this.props.selectedField}\n            handleChange={this.handleChange}\n          />\n          {this.props.items.length ? (\n            <ResultsTable\n              items={this.props.items}\n              resultCount={this.props.resultCount}\n            />\n          ) : null}\n        </div>\n      );\n    }\n  }\n}\n\nexport default Main;\n","import { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport {\n  fetchFields,\n  receiveFields,\n  requestFields,\n  selectedField,\n  fetchFieldData\n} from \"../actions/actionCreators\";\n\nimport Main from \"./Main\";\n\nfunction mapStateToProps(state) {\n  return {\n    fields: state.fetchSelectFields.fields,\n    error: state.fetchSelectFields.error,\n    isFetching: state.fetchSelectFields.isFetching,\n    selectedField: state.selectedField,\n    items: state.fetchFieldData.items,\n    resultCount: state.fetchFieldData.resultCount\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    fetchFields,\n    requestFields,\n    receiveFields,\n    selectedField,\n    fetchFieldData,\n    dispatch\n  );\n}\n\nconst App = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Main);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router basename=\"/\">\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}